package Server.CommonObjects;


/**
* Server/CommonObjects/GameResultHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from commoninterface.idl
* Monday, May 19, 2025 12:57:02 PM SGT
*/

abstract public class GameResultHelper
{
  private static String  _id = "IDL:Server/CommonObjects/GameResult:1.0";

  public static void insert (org.omg.CORBA.Any a, Server.CommonObjects.GameResult that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static Server.CommonObjects.GameResult extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [6];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[0] = new org.omg.CORBA.StructMember (
            "sessionId",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[1] = new org.omg.CORBA.StructMember (
            "winner",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_sequence_tc (0, _tcOf_members0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_alias_tc (Server.CommonObjects.StringSequenceHelper.id (), "StringSequence", _tcOf_members0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "players",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[3] = new org.omg.CORBA.StructMember (
            "roundsPlayed",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[4] = new org.omg.CORBA.StructMember (
            "totalGuessesMade",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[5] = new org.omg.CORBA.StructMember (
            "duration",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (Server.CommonObjects.GameResultHelper.id (), "GameResult", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static Server.CommonObjects.GameResult read (org.omg.CORBA.portable.InputStream istream)
  {
    Server.CommonObjects.GameResult value = new Server.CommonObjects.GameResult ();
    value.sessionId = istream.read_string ();
    value.winner = istream.read_string ();
    value.players = Server.CommonObjects.StringSequenceHelper.read (istream);
    value.roundsPlayed = istream.read_long ();
    value.totalGuessesMade = istream.read_long ();
    value.duration = istream.read_long ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, Server.CommonObjects.GameResult value)
  {
    ostream.write_string (value.sessionId);
    ostream.write_string (value.winner);
    Server.CommonObjects.StringSequenceHelper.write (ostream, value.players);
    ostream.write_long (value.roundsPlayed);
    ostream.write_long (value.totalGuessesMade);
    ostream.write_long (value.duration);
  }

}
